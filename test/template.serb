---
layout: page
title: I'm a #{
  "titl" + "e! " +
  [':', ')']
  .join
}
categories:
- category1
- category2
---

The title is: {{ page.data["title"] | safe }}
Categories: {{ page.data["categories"] | safe }}

This is {{ "totally great" }}
Umâ€¦ {% so_far = "so good" %}
{% error_messages = {first_name: "Bad!"} %}

{%
  for i in [1,3,5,7]
    %}{{ i }}{%
  end
%}
Whoa

Here we go! {{ so_far|upcase|foo "WILD", bar: baz|finalize }} Yay! {{ 123   |   to_f }} Done.

----

{% raw %}
```ruby
{%= form classes: "raw" do %}
  <input /> {{ blah blah | blee }}
{% end %}
```
{% endraw %}

{%%= "another raw example" %}

----

{%=  form(
        classname: "checkoout"
      ) do |f| %}
  {{ f.input :first_name, required: true | errors: error_messages | safe }}
{% end %}

----

{%@form :the_model do |f| %}
{% end %}

{%@form :the_model extra_params: true do |f| %}
{% end %}

{%@form :the_model, extra_params: true do |f| %}
{% end %}

----

{%@_ :div, class: "wee" do %}
  {%@_ :span, "That's interesting!" %}
{%@ %}

----

{{ defined?(groovy) ? "yipee!" : "groovy not defined :("  }}

{% groovy = "   groovy!   " %}

{{ defined?(groovy) ? "yipee!" : "groovy not defined :("  }}

----

{{ "Groovy! \| #{groovy.strip} :)"
|
prepend:
"Groovy? " }}

----

<input value="{{ da_value }}" />
{% has_selected_variant = groovy != nil ? true : false %}
Selected? {{ has_selected_variant }}

----

{% wow = capture do %}
  This is {{ "amazing" + "!" | upcase }} :)
{% end.each_char.reduce("") do |newstr, c|
    newstr += " #{c}"
   end.strip %}

{% nice = "Whoa " %}
{{ wow | prepend: "OMG! " | missing_filter | prepend: nice | append: " ;-D" }}

Prepend permanent?
{{ wow | raw }}

----

{%@ "weee/wooo", cool: "beans yeah" do |testing| %}
  This is **dope!**
  {%@ "weee/wooo", cool: "cats" do %}
    So great.
  {% end %}
{% end %}

{%@ "weee/wooo", cool: "boxes" %}

{% import "helpers" %}
<p>
  Multiply! {{ [1,3,6, "9"] | multiply_array: 10 }}
</p>

{{ partial "errors", errors: error_messages |> upcase: }}

----
{%= test_macro do %}
  Is this a thing??
  {%= test_macro do %}
    I hope so!
  {% end %}
  Wee!
{% end %}
{%= test_macro "Best helper ever!", yo: "dude" %}
{%= test_macro %}

{{ "Let's not <em>escape</em> this!" | safe }}
{{ "Now let's <em>escape</em> by default!" }}
{% Serbea::Pipeline.autoescape = false %}
{{ "Now let's NOT <em>escape</em> by default!" }}

{%@ ButtonComponent foo: true do %}
  <p>component 1!</p>
{%@ %}

{%@ ButtonComponent bar: false, baz: 1234 do |block_var| %}
  <p>component 2!</p>
{%@ end %}

{%@ ButtonComponent %}

{{
  [1,2,3] |>
  map: -> i  {
    i * 10
  } |>
  to_enum: :filter |>
  each: -> i do
    i > 15
  end |>
  assign_to: :array_length
}}Array length: {%= @array_length.length %}

{{ "1,2,3" | split: ",", ->(str) { @wild ||= ""; @wild += "ha#{str}he" } }}
{{ @wild }}

{{ [3,5,10] | filter: ->item do
    check = 4
    return item > check
    end | join: "." }}

{{ [1, 3, 6] \| [2, 3, 9] | join: "-" | append: " Foo \| bar!" | gsub: /ba\|r/, "x" }}

{{ LambdaTest.new | scope: "lambda test", ->(x) { x * 20 }, ->{} | center: 50 }}

{% use_local_helper = ->(input) { input.downcase } %}
{{ "YO" | use_local_helper }}

{%@frame "neato" %}
  This is AWESOME
{%@ %}

{%@frame "also-neato" do %}
  This is ALSO AWESOME
{%@ %}

{%@append "clearances", "<div id='clearance_5'>Append this to .clearances</div>" %}

{%@` <str-test
      class="#{%w(many "classes").join(" ")}"
      data-json="#{{foo: "ba<r>", baz: "&cool"}.to_json}"
      data-total="\#{3+9}"> `%}

</str-test>